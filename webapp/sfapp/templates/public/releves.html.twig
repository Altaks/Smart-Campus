{% extends 'base.html.twig'%}

{% block title %}Relevés{% endblock %}

{% block body %}

    <div class="w-2/3 mx-auto my-12">
        <nav class="flex" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
                <li class="inline-flex items-center">
                    <a href="/accueil" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
                        <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                            <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                        </svg>
                        Accueil
                    </a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                        </svg>
                        <a href="/releves" class="ms-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ms-2 dark:text-gray-400 dark:hover:text-white">Relevés</a>
                    </div>
                </li>
            </ol>
        </nav>
    </div>
    <h1 class="text-4xl pb-12 text-center">Relevés</h1>
    <div class="w-2/3 mx-auto flex justify-between">
        <div>
            <h1>Veuillez choisir une salle</h1>
            {{ form_start(form) }}
                <select name="{{ field_name(form.salle) }}" class="form-control bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" onchange="this.form.submit()">
                    <option value="" disabled>Choisir une salle</option>
                    {% for label, value in field_choices(form.salle) %}
                        {% if form_selected is defined and label == form_selected.nom %}
                            <option value="{{ value }}" selected>{{ label }}</option>
                        {% else %}
                            <option value="{{ value }}">{{ label }}</option>
                        {% endif %}
                    {% endfor %}
                </select>
            {{ form_end(form) }}
        </div>
        {% if form_selected is defined and form_selected is not null %}
            <div class="my-auto">
                <a href="/signaler-erreur/{{ form_selected.id }}" class="text-white bg-red-500 hover:bg-red-600 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2">
                    Signaler une erreur</a>
            </div>
        {% endif %}
    </div>
    <div class="w-2/3 mx-auto my-12">
        {% if temp_dates is defined and temp_dates is not null and temp_releves is defined and temp_releves is not null %}
            <div class="w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6">
                <div class="flex justify-between mb-5">
                    <div>
                        <h5 class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2">Températures</h5>
                        <p class="text-base font-normal text-gray-500 dark:text-gray-400">en °C</p>
                        <div class="text-red-500">
                            {% if temp_dernier > seuils.temp_max %}
                                <p id="alerteTemp">
                                    La température de la salle est trop élevé
                                </p>
                            {% elseif temp_dernier < seuils.temp_min %}
                                <p id="alerteTemp">
                                    La température de la salle est trop basse
                                </p>
                            {% endif %}
                        </div>
                        <div class="text-green-500">
                            {% if temp_dernier > seuils.temp_max %}
                                <p id="conseilTemp">
                                    Il est conseillé de baisser le chauffage et d'ouvrir les fenêtres
                                </p>
                            {% elseif temp_dernier < seuils.temp_min %}
                                <p id="conseilTemp">
                                    Il est conseillé de monter le chauffage et de fermer les fenêtres
                                </p>
                            {% endif %}
                        </div>
                    </div>
                    {% if temp_diff > 0 %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-green-500 dark:text-green-400 text-center">
                            + {{ temp_diff | number_format(2) }} °C
                            <box-icon name='up-arrow-alt' color="#16a34a"></box-icon>
                        </div>
                    {% elseif temp_diff < 0 %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-red-500 dark:text-red-400 text-center">
                            {{ temp_diff | number_format(2) }} °C
                            <box-icon name='down-arrow-alt' color="#ef4444"></box-icon>
                        </div>
                    {% else %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-gray-900 dark:text-gray-400 text-center">
                            =
                        </div>
                    {% endif %}
                </div>
                <div id="temps-labels-chart"></div>
            </div>

            <script>
                // ApexCharts options and config
                window.addEventListener("load", function() {
                    let options = {
                        dataLabels: {
                            enabled: false,
                        },
                        grid: {
                            show: false,
                            strokeDashArray: 4,
                            padding: {
                                left: 16,
                                right: 16,
                                top: -26
                            },
                        },
                        series: [
                            {
                                name: "Températures locales",
                                data: [{% for val in temp_releves %}"{{ val }}"{% if loop.last == false %},{% endif %}{% endfor %}],
                                color: "#1A56DB",
                            },
                            {
                                name: "Températures extérieures",
                                data: [{% for val in temp_env %}"{{ val }}"{% if loop.last == false %},{% endif %}{% endfor %}],
                                color: "#7F8C8D",
                            }
                        ],
                        annotations: {
                            yaxis: [
                                {
                                    y: {{ seuils.temp_max }},
                                    borderColor: '#C70039',
                                    label: {
                                        borderColor: '#C70039',
                                        style: {
                                            color: '#fff',
                                            background: '#C70039',
                                        },
                                        text: 'Température Max',
                                    }
                                },
                                {
                                    y: {{ seuils.temp_min }},
                                    borderColor: '#C70039',
                                    strokeDashArray: 4,
                                    label: {
                                        borderColor: '#C70039',
                                        style: {
                                            color: '#fff',
                                            background: '#C70039',
                                        },
                                        text: 'Température Min',
                                    }
                                }
                            ]
                        },
                        chart: {
                            height: "100%",
                            maxWidth: "100%",
                            type: "area",
                            fontFamily: "Inter, sans-serif",
                            dropShadow: {
                                enabled: false,
                            },
                            toolbar: {
                                show: true,
                            },
                        },
                        tooltip: {
                            enabled: true,
                            x: {
                                show: false,
                            },
                        },
                        legend: {
                            show: true
                        },
                        fill: {
                            type: "gradient",
                            gradient: {
                                opacityFrom: 0.55,
                                opacityTo: 0,
                                shade: "#1C64F2",
                                gradientToColors: ["#1C64F2"],
                            },
                        },
                        stroke: {
                            width: 5,
                        },
                        xaxis: {
                            categories: [
                                {% for val in temp_dates %}"{{ val | format_datetime('full', 'short', locale='fr') | title }}"{% if loop.last == false %},{% endif %}{% endfor %}
                            ],
                            labels: {
                                show: false,
                            },
                            axisBorder: {
                                show: false,
                            },
                            axisTicks: {
                                show: false,
                            },
                        },
                        yaxis: {
                            show: false,
                            labels: {
                                formatter: function (value) {
                                    return value + '°C';
                                }
                            }
                        },
                    }

                    if (document.getElementById("temps-labels-chart") && typeof ApexCharts !== 'undefined') {
                        const chart = new ApexCharts(document.getElementById("temps-labels-chart"), options);
                        chart.render();
                    }
                });
            </script>
        {% elseif temp_error is defined %}
            <div class="bg-red-300 rounded-lg text-red-950 text-xl w-full text-center my-12 p-6">
                {{ temp_error }}
            </div>
        {% endif %}
        {% if hum_dates is defined and hum_dates is not null and hum_releves is defined and hum_releves is not null %}
            <div class="w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6 my-6">
                <div class="flex justify-between mb-5">
                    <div>
                        <h5 class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2">Humidité</h5>
                        <p class="text-base font-normal text-gray-500 dark:text-gray-400">en %</p>
                        <div class="text-red-500">
                            {% if hum_dernier > seuils.humidite_max %}
                                <p id="alerteHum">
                                    Le niveau d'humidité de la salle et trop élevé
                                </p>
                            {% endif %}
                        </div>
                        <div class="text-green-500">
                            {% if hum_dernier > seuils.humidite_max %}
                                <p id="conseilHum">
                                    Il est conseillé de fermer les fenêtres
                                </p>
                            {% endif %}
                        </div>
                    </div>
                    {% if hum_diff > 0 %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-red-500 dark:text-red-400 text-center">
                            + {{ hum_diff | number_format(2)}} %
                            <box-icon name='up-arrow-alt' color="#ef4444"></box-icon>
                        </div>
                    {% elseif hum_diff < 0 %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-green-500 dark:text-green-400 text-center">
                            {{ hum_diff | number_format(2)}} %
                            <box-icon name='down-arrow-alt' color="#16a34a"></box-icon>
                        </div>
                    {% else %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-gray-900 dark:text-gray-400 text-center">
                            =
                        </div>
                    {% endif %}
                </div>
                <br>
                <div id="hum-labels-chart" class="my-3"></div>
            </div>
            <script>
                // ApexCharts options and config
                window.addEventListener("load", function() {
                    let options = {
                        dataLabels: {
                            enabled: false,
                        },
                        grid: {
                            show: false,
                            strokeDashArray: 4,
                            padding: {
                                left: 16,
                                right: 16,
                                top: -26
                            },
                        },
                        series: [
                            {
                                name: "Humidité locale",
                                data: [{% for val in hum_releves %}"{{ val }}"{% if loop.last == false %},{% endif %}{% endfor %}],
                                color: "#1A56DB",
                            },
                            {
                                name: "Humidité extérieure",
                                data: [{% for val in hum_env %}"{{ val }}"{% if loop.last == false %},{% endif %}{% endfor %}],
                                color: "#7F8C8D",
                            }
                        ],
                        annotations: {
                            yaxis: [
                                {
                                    y: {{ seuils.humidite_max }},
                                    borderColor: '#C70039',
                                    strokeDashArray: 4,
                                    label: {
                                        borderColor: '#C70039',
                                        style: {
                                            color: '#fff',
                                            background: '#C70039',
                                        },
                                        text: 'Humidité Max',
                                    }
                                }
                            ]
                        },
                        chart: {
                            height: "100%",
                            maxWidth: "100%",
                            type: "area",
                            fontFamily: "Inter, sans-serif",
                            dropShadow: {
                                enabled: false,
                            },
                            toolbar: {
                                show: true,
                            },
                        },
                        tooltip: {
                            enabled: true,
                            x: {
                                show: false,
                            },
                        },
                        legend: {
                            show: true
                        },
                        fill: {
                            type: "gradient",
                            gradient: {
                                opacityFrom: 0.55,
                                opacityTo: 0,
                                shade: "#1C64F2",
                                gradientToColors: ["#1C64F2"],
                            },
                        },
                        stroke: {
                            width: 5,
                        },
                        xaxis: {
                            categories: [
                                {% for val in hum_dates %}"{{ val | format_datetime('full', 'short', locale='fr') | title }}"{% if loop.last == false %},{% endif %}{% endfor %}
                            ],
                            labels: {
                                show: false,
                            },
                            axisBorder: {
                                show: false,
                            },
                            axisTicks: {
                                show: false,
                            },
                        },
                        yaxis: {
                            show: false,
                            labels: {
                                formatter: function (value) {
                                    return value + ' %';
                                }
                            }
                        },
                    }

                    if (document.getElementById("hum-labels-chart") && typeof ApexCharts !== 'undefined') {
                        const chart = new ApexCharts(document.getElementById("hum-labels-chart"), options);
                        chart.render();
                    }
                });
            </script>
            {% elseif hum_error is defined %}
            <div class="bg-red-300 rounded-lg text-red-950 text-xl w-full text-center my-12 p-6">
                {{ hum_error }}
            </div>
        {% endif %}
        {% if co2_dates is defined and co2_dates is not null and co2_releves is defined and co2_releves is not null %}
            <div class="w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6 my-6">
                <div class="flex justify-between">
                    <div>
                        <h5 class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2">Qualité de l'air</h5>
                        <p class="text-base font-normal text-gray-500 dark:text-gray-400">en ppm</p>
                        <div class="text-red-500">
                            {% if co2_dernier > seuils.co2_premier_palier %}
                                {% if co2_dernier > seuils.co2_second_palier %}
                                    <p id="alerteQual">
                                        La qualité de l'air est très mauvaise
                                    </p>
                                {% else %}
                                    <p id="alerteQual">
                                        La qualité de l'air est mauvaise
                                    </p>
                                {% endif %}
                            {% endif %}
                        </div>
                        <div class="text-green-500">
                            {% if co2_dernier > seuils.co2_premier_palier %}
                                <p id="conseilQual">
                                    Il est conseillé d\'aérer la salle
                                </p>
                            {% endif %}
                        </div>
                    </div>
                    {% if co2_diff > 0 %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-red-500 dark:text-red-400 text-center">
                            + {{ co2_diff | number_format(2) }} ppm
                            <box-icon name='up-arrow-alt' color="#ef4444"></box-icon>
                        </div>
                    {% elseif co2_diff < 0 %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-green-500 dark:text-green-400 text-center">
                            {{ co2_diff | number_format(2) }} ppm
                            <box-icon name='down-arrow-alt' color="#16a34a"></box-icon>
                        </div>
                    {% else %}
                        <div class="flex items-center px-2.5 py-0.5 text-base font-semibold text-gray-900 dark:text-gray-400 text-center">
                            =
                        </div>
                    {% endif %}
                </div>
                <div id="co2-chart"></div>
            </div>
            <script>
                // ApexCharts options and config
                window.addEventListener("load", function() {
                    let options = {
                        chart: {
                            height: "100%",
                            maxWidth: "100%",
                            type: "area",
                            fontFamily: "Inter, sans-serif",
                            dropShadow: {
                                enabled: false,
                            },
                            toolbar: {
                                show: true,
                            },
                        },
                        tooltip: {
                            enabled: true,
                            x: {
                                show: false,
                            },
                        },
                        fill: {
                            type: "gradient",
                            gradient: {
                                opacityFrom: 0.55,
                                opacityTo: 0,
                                shade: "#1C64F2",
                                gradientToColors: ["#1C64F2"],
                            },
                        },
                        dataLabels: {
                            enabled: false,
                        },
                        stroke: {
                            width: 6,
                        },
                        grid: {
                            show: false,
                            strokeDashArray: 4,
                            padding: {
                                left: 2,
                                right: 2,
                                top: 0
                            },
                        },
                        series: [
                            {
                                name: "Qualité de l'air",
                                data: [{% for val in co2_releves %}"{{ val }}"{% if loop.last == false %},{% endif %}{% endfor %}],
                                color: "#1A56DB",
                            %},
                        ],
                        annotations: {
                            yaxis: [
                                {
                                    y: {{ seuils.co2_premier_palier }},
                                    strokeDashArray: 4,
                                    borderColor: '#F2B02B',
                                    label: {
                                        borderColor: '#F2B02B',
                                        style: {
                                            color: '#000',
                                            background: '#F2B02B',
                                        },
                                        text: 'CO2 1er palier',
                                    }
                                },
                                {
                                    y: {{ seuils.co2_second_palier }},
                                    borderColor: '#C70039',
                                    strokeDashArray: 4,
                                    label: {
                                        borderColor: '#C70039',
                                        style: {
                                            color: '#fff',
                                            background: '#C70039',
                                        },
                                        text: 'CO2 2nd palier',
                                    }
                                }
                            ]
                        },
                        xaxis: {
                            categories: [
                                {% for val in co2_dates %}"{{ val | format_datetime('full', 'short', locale='fr') | title }}"{% if loop.last == false %},{% endif %}{% endfor %}
                            ],
                            labels: {
                                show: false,
                            },
                            axisBorder: {
                                show: false,
                            },
                            axisTicks: {
                                show: false,
                            },
                        },
                        yaxis: {
                            show: false,
                            labels: {
                                formatter: function (value) {
                                    return value + ' ppm';
                                }
                            }
                        },
                    }

                    if (document.getElementById("co2-chart") && typeof ApexCharts !== 'undefined') {
                        const chart = new ApexCharts(document.getElementById("co2-chart"), options);
                        chart.render();
                    }
                });
            </script>
        {% elseif co2_error is defined %}
            <div class="bg-red-300 rounded-lg text-red-950 text-xl w-full text-center my-12 p-6">
                {{ co2_error }}
            </div>
        {% endif %}
    </div>

{% endblock %}
